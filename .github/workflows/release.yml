name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  actions: read
  checks: read
  deployments: read
  issues: read
  packages: read
  pull-requests: read
  repository-projects: read
  statuses: read

jobs:
  release:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        # Run your test suite here
        # For example: python -m unittest discover tests/

    - name: Install PyInstaller
      run: |
        pip install pyinstaller

    - name: Build Windows executable
      run: |
        pyinstaller --onefile --name=robco-terminal --add-data "src/assets;src/assets" --add-data "src/handlers/ai_personalities;src/handlers/ai_personalities" --add-data "src/narrative/yaml;src/narrative/yaml" src/app/main.py

    - name: Install Windows SDK
      uses: microsoft/setup-msbuild@v1.1

    - name: Create certificate file
      env:
        CERTIFICATE_BASE64: ${{ secrets.CERTIFICATE_BASE64 }}
        CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
      run: |
        $bytes = [Convert]::FromBase64String($env:CERTIFICATE_BASE64)
        [IO.File]::WriteAllBytes("certificate.pfx", $bytes)
        echo "CERTIFICATE_PASSWORD=$env:CERTIFICATE_PASSWORD" >> $env:GITHUB_ENV

    - name: Sign executable
      run: |
        & 'C:\Program Files (x86)\Windows Kits\10\bin\10.0.22000.0\x64\signtool.exe' sign /f certificate.pfx /p ${{ env.CERTIFICATE_PASSWORD }} /fd SHA256 /tr http://timestamp.digicert.com /td SHA256 ./dist/robco-terminal.exe

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/robco-terminal.exe
        asset_name: robco-terminal.exe
        asset_content_type: application/vnd.microsoft.portable-executable
